version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: womens_day_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-womens_day_gifts}
      MYSQL_USER: ${DB_USER:-appuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-rootpassword}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql
    ports:
      - "3306:3306"
    networks:
      - womens_day_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Node.js Application
  app:
    build: .
    container_name: womens_day_app
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: mysql
      DB_USER: ${DB_USER:-appuser}
      DB_PASSWORD: ${DB_PASSWORD:-rootpassword}
      DB_NAME: ${DB_NAME:-womens_day_gifts}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      PORT: 3000
      BASE_URL: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ./public/uploads:/app/public/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - womens_day_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
volumes:
  mysql_data:

networks:
  womens_day_network:
    driver: bridge

